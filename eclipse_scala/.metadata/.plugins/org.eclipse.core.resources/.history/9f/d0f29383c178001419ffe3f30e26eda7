package week3

object Rational {
  println("Welcome to the Scala worksheet")
	new Rational(1, 2)
	
	val n = new Rational(2, 4)
	n.numer
	n.denom
	
	val y = new Rational(2, 3)
	n.add(y)
	
	n.sub(y)
	
	n.neg
	
	val a = new Rational(1, 3)
	val b = new Rational(5, 7)
	val c = new Rational(3, 2)
	a.add(b.neg).add(c.neg)
	
	val d = new Rational(10, 20)
	val e = new Rational(15, 20)
	
	d.less(e)
	d.more(e)
}

class Rational(x: Int, y: Int) {
	
	// constructor overload
	def this(x: Int) = this(x, 1)
	
	private def gcd(a: Int, b: Int): Int =
		if (b == 0) a else gcd(b, a%b)
	def g = gcd(x,y)
	def numer = x/g
	def denom = y/g
	
	def add(that: Rational) =
		new Rational(
			numer * that.denom + that.numer * denom,
			denom * that.denom
			)
			
	def sub(that: Rational) =
		new Rational(
			numer * that.denom - that.numer * denom,
			denom * that.denom
			)
	
	def neg =
		new Rational(-numer, denom)
	
	def less(that: Rational) =
		numer * that.denom < that.numer * denom
		
	def more(that: Rational) =
		!less(that)
		
	def max(that: Rational) =
		if less(that) that else this
		
	override def toString() =
		numer + "/" + denom
}