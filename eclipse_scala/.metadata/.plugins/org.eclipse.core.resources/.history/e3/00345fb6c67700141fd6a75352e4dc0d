package squareroot

object SquareRoot {
  println("Welcome to the Scala Square Root worksheet")
                                                  //> Welcome to the Scala Square Root worksheet
  def abs(x: Double): Double =
  	if (x<0) -x else x                        //> abs: (x: Double)Double
  
  def sqrtIter(x: Double, guess: Double): Double =
  		if (isGoodEnough(x, guess)) x
  		else sqrtIter(x, improve(x,guess))//> sqrtIter: (x: Double, guess: Double)Double
  def isGoodEnough(x: Double, guess: Double) =
  		abs(guess*guess - x) < 0.001      //> isGoodEnough: (x: Double, guess: Double)Boolean
  		
  	def improve(x: Double,guess: Double) =
  		(guess + x/guess)/2               //> improve: (x: Double, guess: Double)Double
  		
  def sqrt(x: Double): Double = {
  	def sqrtIter(x: Double, guess: Double): Double =
  		if (isGoodEnough(x, guess)) x
  		else sqrtIter(x, improve(x,guess))
  		
  	def isGoodEnough(x: Double, guess: Double) =
  		abs(guess*guess - x) < 0.001
  		
  	def improve(x: Double, guess: Double) =
  		(guess + x/guess)/2
  		
  	sqrtIter(x, 1.0)
  }                                               //> sqrt: (x: Double)Double
  
  isGoodEnough(100, 1.0)                          //> res0: Boolean = false
  improve(100, 1.0)                               //> res1: Double = 50.5
  isGoodEnough(100, 50.5)                         //> res2: Boolean = false
  improve(100, 50.5)                              //> res3: Double = 26.24009900990099
  isGoodEnough(100, 26.2400990)                   //> res4: Boolean = false
  improve(100, 26.2400990)                        //> res5: Double = 15.025530115755299
  sqrt(4)                                         //> res6: Double = 4.0
  sqrt(100)                                       //> res7: Double = 100.0
  
}